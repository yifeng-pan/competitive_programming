--https://open.kattis.com/problems/inversefactorial

import Data.List

toInt :: Double -> Int
toInt x = truncate x

sum_logf :: Int -> Int -> Double -> Int
sum_logf l n slnf
    | l <= (toInt slnf) = n - 1 --watch for off-by-one error
    | otherwise = sum_logf l n' slnf'
    where
        n' = n + 1
        slnf' = slnf + (logBase 10 (fromIntegral (n + 1)))

log_approach :: Int -> Int
log_approach l = sum_logf l 1 0

solve :: String -> Int
solve xs
    | l <= 3 = (elemIndices (read xs) facts)!!0 --There are multiple factorials with 1 and 3 digits
    | l <= 1000 = (elemIndices l dfacts)!!0 --Using exact values from a list instead of the log approach.
    | otherwise = log_approach l --The log approach approximation is sufficient for high n!
    where
        l = length xs
        facts = [0, 1, 2, 6, 24, 120, 720, 5040] --0! isn't 0, but Kattis wants 1 as the answer to n in n! = 1.
        dfacts = [1,1,1,1,2,3,3,4,5,6,7,8,9,10,11,13,14,15,16,18,19,20,22,23,24,26,27,29,30,31,33,34,36,37,39,41,42,44,45,47,48,50,52,53,55,57,58,60,62,63,65,67,68,70,72,74,75,77,79,81,82,84,86,88,90,91,93,95,97,99,101,102,104,106,108,110,112,114,116,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,150,152,154,156,158,160,162,164,167,169,171,173,175,177,179,181,183,185,187,189,191,193,195,197,199,201,203,206,208,210,212,214,216,218,220,222,225,227,229,231,233,235,237,239,242,244,246,248,250,252,255,257,259,261,263,265,268,270,272,274,276,279,281,283,285,287,290,292,294,296,298,301,303,305,307,310,312,314,316,319,321,323,325,328,330,332,334,337,339,341,343,346,348,350,352,355,357,359,362,364,366,369,371,373,375,378,380,382,385,387,389,392,394,396,399,401,403,406,408,410,413,415,417,420,422,424,427,429,431,434,436,438,441,443,445,448,450,452,455,457,460,462,464,467,469,471,474,476,479,481,483,486,488,491,493,495,498,500,503,505,507,510,512,515,517,519,522,524,527,529,532,534,536,539,541,544,546,549,551,554,556,558,561,563,566,568,571,573,576,578,580,583,585,588,590,593,595,598,600,603,605,608,610,613,615,617,620,622,625,627,630,632,635,637,640,642,645,647,650,652,655,657,660,662,665,667,670,672,675,677,680,682,685,687,690,692,695,698,700,703,705,708,710,713,715,718,720,723,725,728,730,733,736,738,741,743,746,748,751,753,756,758,761,764,766,769,771,774,776,779,781,784,787,789,792,794,797,799,802,805,807,810,812,815,817,820,823,825,828,830,833,836,838,841,843,846,849,851,854,856,859,862,864,867,869,872,875,877,880,882,885,888,890,893,895,898,901,903,906,908,911,914,916,919,922,924,927,929,932,935,937,940,943,945,948,950,953,956,958,961,964,966,969,972,974,977,980,982,985,987,990,993,995,998,1001]

main = do
    nfact <- getLine
    (putStrLn . show . solve) nfact